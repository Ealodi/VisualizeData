{"remainingRequest":"C:\\Users\\86137\\Desktop\\vue-echarts-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\86137\\Desktop\\vue-echarts-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\86137\\Desktop\\vue-echarts-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86137\\Desktop\\vue-echarts-master\\src\\views\\page1.vue?vue&type=template&id=0e1c04d8&","dependencies":[{"path":"C:\\Users\\86137\\Desktop\\vue-echarts-master\\src\\views\\page1.vue","mtime":1705386667637},{"path":"C:\\Users\\86137\\Desktop\\vue-echarts-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1705386746886},{"path":"C:\\Users\\86137\\Desktop\\vue-echarts-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1705386749457},{"path":"C:\\Users\\86137\\Desktop\\vue-echarts-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1705386746886},{"path":"C:\\Users\\86137\\Desktop\\vue-echarts-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1705386748690}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}