{"remainingRequest":"C:\\Users\\86137\\Desktop\\vue-echarts-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\86137\\Desktop\\vue-echarts-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\86137\\Desktop\\vue-echarts-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86137\\Desktop\\vue-echarts-master\\src\\views\\components\\page1\\chart9.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\86137\\Desktop\\vue-echarts-master\\src\\views\\components\\page1\\chart9.vue","mtime":1705386667830},{"path":"C:\\Users\\86137\\Desktop\\vue-echarts-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1705386746886},{"path":"C:\\Users\\86137\\Desktop\\vue-echarts-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1705386748295},{"path":"C:\\Users\\86137\\Desktop\\vue-echarts-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1705386746886},{"path":"C:\\Users\\86137\\Desktop\\vue-echarts-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1705386748690}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["chart9.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div style=\"height:100%;\"></div>\n</template>\n\n<script>\nexport default {\n    name: '',\n    data() {\n        return {\n            myChart: null,\n            seriesData: [\n              {name: '分类1', value: 380, data: [3600, 7200, 4800, 9000, 5200, 1800, 2400, 600]},\n              {name: '分类2', value: 300, data: [2800, 5800, 3600, 7000, 6400, 3600, 5400, 4600]},\n              {name: '分类3', value: 240, data: [2600, 3200, 5800, 2000, 3200, 5800, 7400, 2600]},\n              {name: '分类4', value: 200, data: [1600, 4200, 2800, 1000, 7200, 5800, 3400, 5600]},\n              {name: '分类5', value: 150, data: [5600, 6200, 6800, 3000, 1200, 5800, 4400, 2500]},\n              {name: '分类6', value: 100, data: [6600, 8200, 5800, 4000, 2200, 3800, 7400, 3600]},\n              {name: '分类7', value: 100, data: [7600, 1200, 3800, 7000, 1200, 3800, 5400, 2600]},\n              {name: '分类8', value: 50, data: [6600, 1200, 2800, 3000, 6200, 5800, 4400, 1600]}\n            ]\n        }\n    },\n    methods: {\n        setOptionData() {\n            let colorList = ['#2c7bfe', '#c2232a', '#feed2c', '#a262f2', '#62d5f2', '#fe672c', '#2c7bfe', '#69f262'];\n            let arr = [];\n            for (let i = 0; i < this.seriesData.length; i++) {\n                let values = [0, 0, 0, 0, 0, 0, 0, 0];\n                values.splice(i, 1, this.seriesData[i].value);\n                let obj = {\n                    name: this.seriesData[i].name,\n                    type: 'bar',\n                    z: 3,\n                    barWidth: 10,\n                    barGap: '-100%',\n                    itemStyle: {\n                        color: colorList[i]\n                    },\n                    data: values\n                }\n\n                arr.push(obj);\n            }\n            for (let i = 0; i < this.seriesData.length; i++) {\n                let obj = {\n                    type: 'line',\n                    name: this.seriesData[i].name,\n                    symbol: 'circle',\n                    smooth: true,\n                    symbolSize: 4,\n                    xAxisIndex: 2,\n                    yAxisIndex: 3,\n                    data: this.seriesData[i].data,\n                    lineStyle: {\n                        width: 1\n                    },\n                    itemStyle: {\n                        color: colorList[i]\n                    }\n                };\n                let obj1 = {\n                    type: 'line',\n                    name: this.seriesData[i].name,\n                    symbol: 'circle',\n                    symbolSize: 4,\n                    smooth: true,\n                    xAxisIndex: 3,\n                    yAxisIndex: 5,\n                    data: this.seriesData[i].data,\n                    lineStyle: {\n                        width: 1\n                    },\n                    itemStyle: {\n                        color: colorList[i]\n                    }\n                };\n\n                arr.push(obj);\n                arr.push(obj1);\n            }\n            let arr1 = [\n                {\n                    name: '辅助',\n                    type: 'bar',\n                    barWidth: 10,\n                    barGap: '-100%',\n                    itemStyle: {\n                        color: '#252448'\n                    },\n                    data: [500, 500, 500, 500, 500, 500, 500, 500]\n                },\n                {\n                    name: '辅助',\n                    xAxisIndex: 1,\n                    yAxisIndex: 1,\n                    type: 'bar',\n                    barWidth: 10,\n                    barGap: '-100%',\n                    itemStyle: {\n                        color: '#252448'\n                    },\n                    data: [500, 500, 500, 500, 500, 500, 500]\n                },\n                {\n                    xAxisIndex: 1,\n                    yAxisIndex: 1,\n                    type: 'bar',\n                    z: 3,\n                    barWidth: 10,\n                    itemStyle: {\n                        color: '#2c7bfe'\n                    },\n                    data: [390, 330, 280, 220, 160, 100, 40]\n                },\n            ]\n            arr = arr.concat(arr1);\n\n            return arr;\n        },\n        /**\n         * 时间秒数格式化\n         * @param s 时间戳（单位：秒）\n         * @returns {*} 格式化后的时分秒\n         */\n        formateData(s) {\n            var t;\n            if (s > -1) {\n                var hour = Math.floor(s / 3600);\n                var min = Math.floor(s / 60) % 60;\n                var sec = s % 60;\n                if (hour != 0) {\n                    t = hour + \"时\";\n                } else {\n                    t = \"\";\n                }\n                t += min + \"分\";\n                t += sec + \"秒\";\n            }\n            return t;\n        },\n        // 应用使用行为\n        setChart() {\n            let option = {\n                tooltip: {\n                    trigger: 'item',\n                    axisPointer: {            // 坐标轴指示器，坐标轴触发有效\n                        type: 'none'        // 默认为直线，可选为：'line' | 'shadow'\n                    },\n                    backgroundColor: '#11367a',\n                    textStyle: {\n                        color: '#6dd0e3',\n                        fontSize: 10,\n                    },\n                    formatter: (data) => {\n                        if (data.componentSubType == 'bar' && data.seriesName != '辅助') {\n                            return data.name + \":\" + data.value\n                        } else if (data.componentSubType == 'line') {\n                            return data.name + \"<br>\" + data.seriesName + \":\" + this.formateData(data.value)\n                        }\n                    }\n                },\n                title: [\n                    {\n                        text: '【类型统计】',\n                        textStyle: {\n                            color: '#75deef',\n                            fontSize: 12,\n                            fontWeight: 'normal'\n                        },\n                        top: '12%',\n                        left: '15%'\n                    },\n                    {\n                        text: '【时长TOP10】',\n                        textStyle: {\n                            color: '#75deef',\n                            fontSize: 12,\n                            fontWeight: 'normal'\n                        },\n                        top: '12%',\n                        right: '14%'\n                    },\n                    {\n                        text: '【使用时长日分布】',\n                        textStyle: {\n                            color: '#75deef',\n                            fontSize: 12,\n                            fontWeight: 'normal'\n                        },\n                        top: '53%',\n                        left: '14%'\n                    },\n                    {\n                        text: '【使用时长时段分布】',\n                        textStyle: {\n                            color: '#75deef',\n                            fontSize: 12,\n                            fontWeight: 'normal'\n                        },\n                        top: '53%',\n                        right: '12%'\n                    }\n                ],\n                legend: [\n                    {\n                        top: '6%',\n                        left: 'center',\n                        itemWidth: 7,\n                        itemHeight: 7,\n                        textStyle: {\n                            color: '#75deef',\n                            fontSize: 12,\n                        },\n                        z: 2,\n                        data: this.seriesData.map(item=>({name: item.name, icon: 'circle'}))\n                    }\n                ],\n                grid: [\n                    {\n                        left: '5%',\n                        top: '20%',\n                        right: '52%',\n                        bottom: '53%',\n                        containLabel: false\n                    },\n                    {\n                        left: '52%',\n                        top: \"20%\",\n                        right: '3%',\n                        bottom: \"53%\",\n                        containLabel: false\n                    },\n                    {\n                        left: '8%',\n                        top: '62%',\n                        right: '52%',\n                        bottom: '8%',\n                        containLabel: false\n                    },\n                    {\n                        left: '55%',\n                        top: \"62%\",\n                        right: '5%',\n                        bottom: \"8%\",\n                        containLabel: false\n                    },\n                ],\n                xAxis: [\n                    {\n                        type: 'category',\n                        data: this.seriesData.map(item => item.name),\n                        axisLabel: {\n                            interval: 0,\n                            fontSize: 9,\n                            color: '#75deef'\n                        },\n                        axisLine: {show: false},\n                        axisTick: {\n                            show: false\n                        }\n                    },\n                    {\n                        type: 'category',\n                        gridIndex: 1,\n                        data: ['数据1', '数据2', '数据3', '数据4', '数据5', '数据6', '数据7'],\n                        axisLine: {show: false},\n                        axisLabel: {\n                            interval: 0,\n                            fontSize: 9,\n                            color: '#75deef'\n                        },\n                        axisTick: {\n                            show: false\n                        }\n                    },\n                    {\n                        type: 'category',\n                        gridIndex: 2,\n                        boundaryGap: false,\n                        data: ['8.1', '8.2', '8.3', '8.4', '8.5', '8.6', '8.7'],\n                        axisLine: {\n                            show: true,\n                            lineStyle: {\n                                color: '#1a3c58'\n                            }\n                        },\n                        axisLabel: {\n                            interval: 0,\n                            fontSize: 9,\n                            color: '#75deef'\n                        },\n                        axisTick: {\n                            show: true\n                        }\n                    },\n                    {\n                        type: 'category',\n                        gridIndex: 3,\n                        boundaryGap: false,\n                        data: ['0.00', '4.00', '8.00', '12.00', '16.00', '20.00', '24.00'],\n                        axisLine: {\n                            show: true,\n                            lineStyle: {\n                                color: '#1a3c58'\n                            }\n                        },\n                        axisLabel: {\n                            interval: 0,\n                            fontSize: 9,\n                            color: '#75deef'\n                        },\n                        axisTick: {\n                            show: true\n                        }\n                    },\n                ],\n                yAxis: [\n                    {\n                        type: 'value',\n                        splitLine: {show: false},\n                        axisLabel: {show: false},\n                        axisLine: {show: false},\n                        axisTick: {\n                            show: false\n                        }\n                    },\n                    {\n                        type: 'value',\n                        gridIndex: 1,\n                        axisLabel: {show: false},\n                        splitLine: {show: false},\n                        axisLine: {show: false},\n                        axisTick: {\n                            show: false\n                        }\n                    },\n                    {\n                        type: 'value',\n                        gridIndex: 2,\n                        axisLabel: {\n                            interval: 0,\n                            fontSize: 9,\n                            color: '#75deef',\n                            showMaxLabel: false\n                        },\n                        name: '(小时)',\n                        nameGap: -5,\n                        nameTextStyle: {\n                            color: '#75deef',\n                            fontSize: 9,\n                            align: 'right',\n                            padding: [0, 4, 0, 0]\n                        },\n                        min: 0,\n                        max: 6,\n                        splitLine: {show: false},\n                        axisLine: {\n                            show: true,\n                            lineStyle: {\n                                color: '#1a3c58'\n                            }\n                        },\n                        axisTick: {\n                            show: true\n                        }\n                    },\n                    {\n                        type: 'value',\n                        gridIndex: 2,\n                        axisLabel: {show: false},\n                        splitLine: {show: false},\n                        axisLine: {show: false},\n                        axisTick: {\n                            show: false\n                        }\n                    },\n                    {\n                        type: 'value',\n                        gridIndex: 3,\n                        axisLabel: {\n                            interval: 0,\n                            fontSize: 9,\n                            color: '#75deef',\n                            showMaxLabel: false\n                        },\n                        name: '(小时)',\n                        nameGap: -5,\n                        nameTextStyle: {\n                            color: '#75deef',\n                            fontSize: 9,\n                            align: 'right',\n                            padding: [0, 4, 0, 0]\n                        },\n                        min: 0,\n                        max: 6,\n                        splitLine: {\n                            show: false,\n\n                        },\n                        axisLine: {\n                            show: true,\n                            lineStyle: {\n                                color: '#1a3c58'\n                            }\n                        },\n                        axisTick: {\n                            show: true\n                        }\n                    },\n                    {\n                        type: 'value',\n                        gridIndex: 3,\n                        axisLabel: {show: false},\n                        splitLine: {show: false},\n                        axisLine: {show: false},\n                        axisTick: {\n                            show: false\n                        }\n                    },\n                ],\n                series: this.setOptionData()\n            };\n            if(!this.myChart) this.myChart =  this.$echarts(this.$el);\n\n            this.myChart.clear();\n            this.myChart.resize()\n            this.myChart.setOption(option);\n        }\n    },\n    mounted() {\n        this.setChart();\n    },\n}\n</script>\n\n<style lang=\"less\" scoped>\n\n</style>\n"],"sourceRoot":"src/views/components/page1"}]}